@page "/categorias/list"
@using CrudBlazor.Models
@inject CrudBlazor.Services.ICategoriaService categoriaService
@inject NavigationManager navManager
@inject IJSRuntime js

<h3>List</h3>
<a href="/categorias/create" class="btn btn-success botao-add">Adicionar</a>
<div>
@if (categorias == null || !categorias.Any())
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nome</th>
                    <th>Ações</th>
                </tr>         
            </thead>
            <tbody>
            @foreach (var category in categorias)
                {
                    <tr>
                        <td>@category.Id</td>
                        <td>@category.Nome</td>
                        <td>
                            <button class="btn btn-danger" @onclick="(() => DeleteCategoria(category.Id))">Excluir</button>

                            <a href="categorias/update/@category.Id" class="btn btn-warning">Editar</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    List<Categoria> categorias = new();


    protected override async Task OnInitializedAsync()
    {
        categorias = await categoriaService.FindAllAsync();
    }

    private async Task DeleteCategoria(int categoryId)
    {
        var confirm = await js.InvokeAsync<bool>("confirm", "tem certeza que deseja excluir?");
        if (confirm is false) return;
        else{
            categoriaService.Delete(categoryId);
            categorias = await categoriaService.FindAllAsync(); // Recarrega a lista de categorias
            StateHasChanged(); // Atualiza o componente para refletir as mudanças
        }
     }
    

}
